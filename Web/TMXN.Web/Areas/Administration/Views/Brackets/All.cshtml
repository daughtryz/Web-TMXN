@model TMXN.Web.ViewModels.Brackets.BracketListViewModel
@using TMXN.Data.Models

<h2>Brackets</h2>

@{
    var list = new List<string>();
    Dictionary<string, List<Team>> data = new Dictionary<string, List<Team>>();
}



@foreach (var bracket in Model.Brackets)
{
    if (!data.ContainsKey(bracket.TournamentName) && bracket.TournamentName != null)
    {
        var helper = new List<Team>();

        helper.AddRange(bracket.Teams);
        data.Add(bracket.TournamentName, helper);


    }
    else
    {
        data[bracket.TournamentName].AddRange(bracket.Teams);
    }

}

<div class="row">


    <div class="row">
        @foreach (var kvp in data)
        {
            if (!kvp.Value.Any(x => x.IsWinner))
            {
            <div class="row-sm-6">
                <div class="card mr-3" style="width: 15rem;">
                    @if (kvp.Value.Count != 0)
                    {
                        <div class="card-header">
                            @kvp.Key
                        </div>

                        @foreach (var team in kvp.Value.OrderByDescending(x => x.Points))
                        {

                <ul class="list-group list-group-flush">
                    @if (!team.IsWinner && !team.IsEliminate)
                    {
                        <li class="list-group-item"><img src="@team.Logo" alt="Responsive image" class="img-fluid" width="40"> @team.Name <div><a asp-area="Administration" asp-controller="Brackets" asp-action="Win" asp-route-id="@team.Id" type="button" class="btn btn-primary">Win</a></div> <div><a asp-area="Administration" asp-controller="Brackets" asp-action="Eliminate" asp-route-id="@team.Id" type="button" class="btn btn-danger">Eliminate</a></div></li>

                    }


                </ul>


                        }

                    }



                </div>
            </div>
            }

        }
    </div>


</div>




